---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: vaultsecrets.vault.finleap.cloud
spec:
  group: vault.finleap.cloud
  names:
    kind: VaultSecret
    listKind: VaultSecretList
    plural: vaultsecrets
    singular: vaultsecret
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VaultSecret is the Schema for the vaultsecrets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VaultSecretSpec defines the desired state of VaultSecret
            properties:
              data:
                description: Array of data definitions for the secret.
                items:
                  description: Definition of a single data definition
                  properties:
                    generator:
                      description: Configuration of secret generation
                      properties:
                        args:
                          items:
                            format: int32
                            type: integer
                          type: array
                        name:
                          enum:
                          - string
                          - bytes
                          - password
                          - rsa
                          - ecdsa
                          - uuid
                          type: string
                      required:
                      - args
                      - name
                      type: object
                    location:
                      properties:
                        field:
                          minLength: 1
                          type: string
                        isBinary:
                          type: boolean
                        path:
                          minLength: 1
                          type: string
                        version:
                          type: integer
                      required:
                      - field
                      - path
                      type: object
                    name:
                      description: Associated key name for the created secret data.
                      minLength: 1
                      type: string
                    template:
                      type: string
                    variables:
                      items:
                        properties:
                          generator:
                            description: Configuration of secret generation
                            properties:
                              args:
                                items:
                                  format: int32
                                  type: integer
                                type: array
                              name:
                                enum:
                                - string
                                - bytes
                                - password
                                - rsa
                                - ecdsa
                                - uuid
                                type: string
                            required:
                            - args
                            - name
                            type: object
                          location:
                            properties:
                              field:
                                minLength: 1
                                type: string
                              isBinary:
                                type: boolean
                              path:
                                minLength: 1
                                type: string
                              version:
                                type: integer
                            required:
                            - field
                            - path
                            type: object
                          name:
                            minLength: 1
                            type: string
                        required:
                        - name
                        type: object
                      type: array
                  required:
                  - name
                  type: object
                type: array
              dataFrom:
                description: Array of vault path references where to gather data from
                  for the secret.
                items:
                  description: Definition of a vault path reference to gather secrets
                    from.
                  properties:
                    collisionStrategy:
                      allOf:
                      - enum:
                        - Ignore
                        - Overwrite
                        - Error
                      - enum:
                        - Error
                        - Ignore
                        - Overwrite
                      description: 'Define how collisions with secrets from other
                        vault references should be handled. Valid values are: - "Error"
                        (default): Errors if a field on this vault secret already
                        exists on the resulting K8s secret; - "Ignore": Value from
                        this vault secret will be ignored if the same field already
                        exists on resulting K8s secret; - "Overwrite": Value from
                        this vault secret will override an already existing field
                        on the resulting K8s secret'
                      type: string
                    path:
                      minLength: 1
                      type: string
                    version:
                      type: integer
                  required:
                  - path
                  type: object
                type: array
              secretLabels:
                additionalProperties:
                  type: string
                description: Array of labels for the created secret.
                type: object
              secretName:
                description: Optional name of secret which is created by this object.
                type: string
              secretType:
                description: Optional type of secret which is created by this object.
                type: string
            type: object
          status:
            description: VaultSecretStatus defines the observed state of VaultSecret
            properties:
              active:
                description: Reference to the created secret object.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of
                      an entire object, this string should contain a valid JSON/Go
                      field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within
                      a pod, this would take on a value like: "spec.containers{name}"
                      (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]"
                      (container with index 2 in this pod). This syntax is chosen
                      only to have some well-defined way of referencing a part of
                      an object. TODO: this design is not final and this field is
                      subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference
                      is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
