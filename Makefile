# Directory, where all required tools are located (absolute path required)
BUILD_PATH ?= $(shell pwd)
TOOLS_DIR  ?= $(shell cd tools 2>/dev/null && pwd)

YQ ?= yq

VERSION ?= 0.0.1-local
KUBE_NAMESPACE ?= vault-operator
LATEST_REV = $(shell git rev-list --tags --max-count=1)
LATEST_TAG = $(shell git describe --tags $(LATEST_REV))

# Prerequisite tools
GO ?= go
GOOS ?= $(go env GOOS)
GOARCH ?= $(go env GOARCH)
DOCKER ?= docker
KUBECTL ?= kubectl

KIND ?= $(TOOLS_DIR)/kind
VAULT ?= $(TOOLS_DIR)/vault
CONTROLLER_GEN ?= $(TOOLS_DIR)/controller-gen
KUSTOMIZE ?= $(TOOLS_DIR)/kustomize
KUBEBUILDER ?= $(TOOLS_DIR)/kubebuilder
KUBEBUILDER_ASSETS ?= $(TOOLS_DIR)

# Variables
MANAGER_BIN ?= bin/manager

##@ General

# The help target prints out all targets with their descriptions organized
# beneath their categories. The categories are represented by '##@' and the
# target descriptions by '##'. The awk commands is responsible for reading the
# entire set of makefiles included in this invocation, looking for lines of the
# file as xyz: ## something, and then pretty-format the target and help. Then,
# if there's a line with ##@ something, that gets pretty-printed as a category.
# More info on the usage of ANSI control characters for terminal formatting:
# https://en.wikipedia.org/wiki/ANSI_escape_code#SGR_parameters
# More info on the awk command:
# http://linuxcommand.org/lc3_adv_awk.php

help: ## Display this help.
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target>\033[0m\n"} /^[a-zA-Z_0-9-]+:.*?##/ { printf "  \033[36m%-15s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)

export

.PHONY: all go-test install uninstall deploy manifests

all: $(MANAGER_BIN)

$(MANAGER_BIN): generate fmt vet
	$(GO) build -o $(MANAGER_BIN) ./main.go

add-license: ## Adds the license to every file
	@docker run --rm -v "$(PWD):/src" -u $(shell id -u) ghcr.io/google/addlicense --ignore **/*.yaml --ignore **/*.yml -c "VaultOperator Authors" -l "apache" -v .

check-license: ## Checks that the license is set on every file
	@docker run --rm -v "$(PWD):/src" -u $(shell id -u) ghcr.io/google/addlicense --ignore **/*.yaml --ignore **/*.yml -c "VaultOperator Authors" -l "apache" -v -check .

manifests: $(CONTROLLER_GEN) $(KUSTOMIZE) ## Generate manifests e.g. CRD, RBAC etc.
	$(CONTROLLER_GEN) crd:trivialVersions=false rbac:roleName=manager-role webhook paths="./..." output:crd:artifacts:config=config/crd/bases
	echo "# Generated by 'make manifests'\n" > $(HELM_CHART_DIR)/templates/crds.yaml
	$(KUSTOMIZE) build config/crd-templates >> $(HELM_CHART_DIR)/templates/crds.yaml
	echo "# Generated by 'make manifests'\n" > $(HELM_CHART_DIR)/templates/rbac.yaml
	$(KUSTOMIZE) build config/rbac-templates >> $(HELM_CHART_DIR)/templates/rbac.yaml
	echo "# Generated by 'make manifests'\n" > $(HELM_CHART_DIR)/templates/webhook.yaml
	$(KUSTOMIZE) build config/webhook-templates >> $(HELM_CHART_DIR)/templates/webhook.yaml

generate: $(CONTROLLER_GEN) ## Generate code using controller-gen

tools: $(TOOLS_DIR)/kind $(TOOLS_DIR)/ginkgo $(TOOLS_DIR)/controller-gen $(TOOLS_DIR)/kustomize $(TOOLS_DIR)/golangci-lint $(TOOLS_DIR)/kubebuilder ## Phony target to install all required tools into ${TOOLS_DIR}

$(TOOLS_DIR)/kind:
	@echo "Installing $@"
	@GOBIN=$(TOOLS_DIR) go install sigs.k8s.io/kind@v0.7.0

$(TOOLS_DIR)/controller-gen:
	@echo "Installing $@"
	@GOBIN=$(TOOLS_DIR) go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.2.5

$(TOOLS_DIR)/kustomize:
	@echo "Installing $@"
	@$(TOOLS_DIR)/install_kustomize.sh $(TOOLS_DIR)

$(TOOLS_DIR)/vault:
	@$(TOOLS_DIR)/vault-install

$(TOOLS_DIR)/kubebuilder $(TOOLS_DIR)/kubectl $(TOOLS_DIR)/kube-apiserver $(TOOLS_DIR)/etcd:
	@$(TOOLS_DIR)/kubebuilder-install

include go.mk
include helm.mk
